# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: RedCap Server Availability Check

on:
  schedule:
    - cron: "0 */12 * * *"

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Tests on Windows elicit errors so keeping only ubuntu/macos for now
        os: [ubuntu-latest]
        python-version: [3.9]
        # Only one job at a time to avoid parallel access of test server
      max-parallel: 1

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Install package
      run: pip install .

    - name: Test with pytest
      env:
        REDCAP_API_TOKEN: ${{ secrets.REDCAP_API_TOKEN }}
      run: |
        python -c \
"
import redcap_bridge.server_interface as si
from pathlib import Path
test_project = Path(si.__file__).parent / 'test_redcap' / 'testfiles' / 'TestProject' / 'project.json'
res = si.download_project_settings(test_project)
if not res['project_id']:
    raise ValueError('Unsuccessfull download')
"

